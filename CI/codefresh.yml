version: '1.0'
steps:
  VersionsToDeploy:
    description: Check versions to deploy
    title: Check versions to deploy
    image: alpine/git
    commands:
      - ./CI/versions_to_deploy.sh ${{CF_VOLUME_PATH}}/env_vars_to_export
          
  BuildGitKeys:
    title: Building Git Keys Docker Image
    type: build
    image_name: soluto/tweek-test-keys
    working_directory: ./deployments/dev/ssh/

  BuildingGitRepository:
    title: Building Git Repository Docker Image
    type: build
    image_name: soluto/tweek-bare-repo
    working_directory: ./services/git-service/BareRepository/

  BuildingUITests:
    title: Building E2E UI Tests Docker Image
    type: build
    image_name: soluto/e2e-ui
    working_directory: ./e2e/ui

  BuildingIntegrationTests:
    title: Building E2E Integration Tests Docker Image
    type: build
    image_name: soluto/e2e-integration
    working_directory: ./e2e/integration
  
  BuildingApiSmokeTestImage:
    title: Building Tweek Api Smoke Test Docker Image
    type: build
    image_name: soluto/tweek-api-smoke-tests
    dockerfile: TweekApiSmokeTestDockerfile

  BuildingZapImage:
    title: Building Zap Docker Image
    type: build
    image_name: soluto/zap
    working_directory: ./deployments/dev/zap
  
  wait-for-all-pipelines:
    image: codefresh/cf-cli
    working_directory: ./CI
    commands:
      - 'sh wait-for-pipelines.sh ${{CF_REVISION}}'
  
  Tests:
    title: Tests - e2e & smoke
    type: composition
    composition: ./CI/docker-compose.yml
    composition_variables:
      - KEYS_IMAGE=${{BuildGitKeys}}
      - REPOSITORY_IMAGE=${{BuildingGitRepository}}
      - ZAP_IMAGE=${{BuildingZapImage}}
      - MANAGEMENT_IMAGE=r.cfcr.io/soluto/soluto/tweek-management:${{CF_SHORT_REVISION}}
      - API_IMAGE=r.cfcr.io/soluto/soluto/tweek-api:${{CF_SHORT_REVISION}}
      - AUTHORING_IMAGE=r.cfcr.io/soluto/soluto/tweek-authoring:${{CF_SHORT_REVISION}}
      - EDITOR_IMAGE=r.cfcr.io/soluto/soluto/tweek-editor:${{CF_SHORT_REVISION}}
      - CF_VOLUME_PATH=${{CF_VOLUME_PATH}}
    composition_candidates:
      smoke-tests:
        image: ${{BuildingApiSmokeTestImage}}
        depends_on: 
          - api
          - management
          - zap-smoke
        volumes:
          - ${{CF_VOLUME}}:/repo
        environment: 
          - TWEEK_API_URL=http://api/
          - PROXY_URL=http://zap-smoke:8090
      e2e-ui:
        image: ${{BuildingUITests}}
        volumes_from:
          - keys
        depends_on: 
          - selenium
          - editor
          - authoring
          - api
          - management
          - zap-e2e
        environment:
          - EDITOR_URL=http://editor:3000/
          - TWEEK_API_URL=http://api/
          - AUTHORING_URL=http://authoring:3000
          - GIT_PRIVATE_KEY_PATH=/gitkeys/tweekgit
          - PROXY_URL=http://zap-e2e:8090
      e2e-integration:
        image: ${{BuildingIntegrationTests}}
        volumes_from:
          - keys
        depends_on:
          - authoring
          - api
          - management
        environment:
          - API_URL=http://api
          - AUTHORING_URL=http://authoring:3000
          - MANAGEMENT_URL=http://tweek-management:3000
          - GIT_PRIVATE_KEY_PATH=/gitkeys/tweekgit
      api-swagger:
        image: node:slim
        depends_on:
          - api
          - management
        volumes:
          - ${{CF_VOLUME}}:/repo
        working_dir: /repo/tweek/CI
        command: wget --tries 20 --timeout=15 --read-timeout=20 --waitretry=30 --retry-connrefused -O api-swagger.json http://api/api/swagger.json
    # on_success:
    #   metadata:
    #     set:
    #       - '${{BuildingApiImage.imageId}}':
    #         - CF_QUALITY: true
    #       - '${{BuildingManagement.imageId}}':
    #         - CF_QUALITY: true
    #       - '${{BuildingEditor.imageId}}':
    #         - CF_QUALITY: true
    #       - '${{BuildingAuthoring.imageId}}':
    #         - CF_QUALITY: true
    # on_fail:
    #   metadata:
    #     set:
    #       - '${{BuildingApiImage.imageId}}':
    #         - CF_QUALITY: false
    #       - '${{BuildingManagement.imageId}}':
    #         - CF_QUALITY: false
    #       - '${{BuildingEditor.imageId}}':
    #         - CF_QUALITY: false
    #       - '${{BuildingAuthoring.imageId}}':
    #         - CF_QUALITY: false

  BuildGlueCli:
    title: Building Glue CLI
    type: build
    image_name: soluto/glue-cli
    working_directory: ./deployments/dev/zap/glue

  SecurityTests:
    title: Tests - security
    type: composition
    composition:
      version: '2'
      services:
        zap:
          image: ${{BuildingZapImage}}
          user: root
          volumes:
            - ${CF_VOLUME_PATH}/tweek/deployments/dev/zap/session:/root/.ZAP/session/
    composition_variables:
      - CF_VOLUME_PATH=${{CF_VOLUME_PATH}}
    composition_candidates:
      glue:
        image: ${{BuildGlueCli}}
        working_dir: /repo/tweek/deployments/dev/zap/glue
        command: ./test.sh
        depends_on: 
          - zap
        environment:
          - ZAP_HOST=http://zap
          - ZAP_PORT=8090
        volumes:
          - ${{CF_VOLUME}}:/repo

  PushApiImageMaster:
    type: push
    title: Push Tweek Api - lastest
    when:
      branch:
        only:
          - master
    candidate: r.cfcr.io/soluto/soluto/tweek-api:${{CF_SHORT_REVISION}}
    tags:
      - latest
      - ${{TWEEK_DOCKER_TAG_API}}

  PushManagementImageMaster:
    type: push
    title: Push Management - lastest
    when:
      branch:
        only:
          - master
    candidate: r.cfcr.io/soluto/soluto/tweek-management:${{CF_SHORT_REVISION}}
    tags:
      - latest
      - ${{TWEEK_DOCKER_TAG_MANAGEMENT}}

  PushAuthoringImageMaster:
    type: push
    title: Push Tweek Authoring - lastest
    when:
      branch:
        only:
          - master
    candidate: r.cfcr.io/soluto/soluto/tweek-authoring:${{CF_SHORT_REVISION}}
    tags:
      - latest
      - ${{TWEEK_DOCKER_TAG_AUTHORING}}

  PushEditorImageMaster:
    type: push
    title: Push Editor - latest
    when:
      branch:
        only:
          - master
    candidate: r.cfcr.io/soluto/soluto/tweek-editor:${{CF_SHORT_REVISION}}
    tags:
      - latest
      - ${{TWEEK_DOCKER_TAG_EDITOR}}

  PushGitRepositoryMaster:
    type: push
    title: Push Git Repository - latest
    when:
      branch:
        only:
          - master
    candidate: ${{BuildingGitRepository}}

  Swagger:
    title: Upload swagger
    when:
      condition:
        all:
          executeForMasterBranch: "'${{CF_BRANCH}}' == 'master'"
          executeForNewVersions: "'${{TWEEK_DOCKER_TAG_API}}' != 'latest'"
    image: node:slim
    working_dir: ./CI
    environment: 
      - UPDATE_SWAGGER_SECRET=${{UPDATE_SWAGGER_SECRET}}
    commands:
      - ./update_swagger.sh api $TWEEK_DOCKER_TAG_API ./api-swagger.json
